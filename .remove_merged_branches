#!/bin/bash

function rmb () {
  current_branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')

  if [ "$current_branch" != "main" ]; then
    echo "WARNING: You are on branch $current_branch, NOT main."
  fi

  echo "Fetching merged branches..."

  git remote prune origin

  remote_branches=$(git branch -r --merged | grep -v '/main$' | grep -v "/$current_branch$")
  local_branches=$(git branch --merged | grep -v 'main$' | grep -v "$current_branch$")

  if [ -z "$remote_branches" ] && [ -z "$local_branches" ]; then
    echo "No existing branches have been merged into $current_branch."
  else
    echo "This will remove the following branches:"

    if [ -n "$remote_branches" ]; then
      echo "$remote_branches"
    fi

    if [ -n "$local_branches" ]; then
      echo "$local_branches"
    fi

    read -rp "Remove all remote branches? (y/n): " -n 1 choice
    echo
    if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
      # Remove remote branches
      git push origin "$(git branch -r --merged | grep -v '/main$' | grep -v "/$current_branch$" | sed 's/origin\//:/g' | tr -d '\n')"
    else
      echo "No remote branches removed."
    fi
    read -rp "Remove all local branches? (y/n): " -n 1 choice
    echo
    if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
      # Remove local branches
      git branch -d $(git branch --merged | grep -v 'main$' | grep -v "$current_branch$" | sed 's/origin\///g' | tr -d '\n' | sed 's/^  //g')
    else
      echo "No local branches removed."
    fi
  fi
}
